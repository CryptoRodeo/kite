services:
  app:
    env_file: .env
    build:
      context: .
      dockerfile: Containerfile
      args:
        - NODE_ENV=${NODE_ENV}
    ports:
      - "${PORT}:3000"
    volumes:
      # Mount the source code for live editing
      - ./packages/backend/:/opt/app-root/src/packages/backend:z
      # Don't mount node_modules (use the container's)
      - /opt/app-root/src/node_modules
      - /opt/app-root/src/packages/backend/node_modules
      # Generated kube-config.yaml file
      - ./configs/kube-config.yaml:/opt/app-root/src/configs/kube-config.yaml:ro
    depends_on:
      db:
        # Ensure the DB is ready before the app
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 30s

  db:
    image: registry.redhat.io/rhel9/postgresql-15
    environment:
      POSTGRESQL_USER: kite
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: issuesdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  pgdata:
